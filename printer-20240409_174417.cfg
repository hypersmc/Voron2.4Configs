[include mainsail.cfg]
[include macros.cfg]
[include nevermore.cfg]
[include sensorless.cfg]
[include canbus-rp2040.cfg]
[include timelapse.cfg]
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
[include ./KAMP/Smart_Park.cfg]
[include ./KAMP/Voron_Purge.cfg]
[include ./KAMP/Line_Purge.cfg]
[include K-ShakeTune/*.cfg]
[include auto_speed.cfg]
[include moonraker_obico_macros.cfg]
[exclude_object]
[respond]
[gcode_arcs]
[force_move]
enable_force_move: True
[static_digital_output disable_max31865]
pins: !PF8
[mcu]
##  BTT MCU  ##
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_31001F000E50304738313820-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 10000                #Max 4000   yeah right    #10000    
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
square_corner_velocity: 5.0

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_x:virtual_endstop
homing_retract_dist: 0
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100   #Max 100
homing_positive_dir: true

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_y:virtual_endstop
homing_retract_dist: 0
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100 #Max 100
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_x]
cs_pin: PC4
diag1_pin: ^!PG6
driver_SGT: 1
interpolate: false
run_current: 0.8 #1.1
sense_resistor: 0.022
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
spi_software_sclk_pin: PA5

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_y]
cs_pin: PD11
diag1_pin: ^!PG9
driver_SGT: 1
interpolate: false
run_current: 0.8 #1.1
sense_resistor: 0.022
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
spi_software_sclk_pin: PA5
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
#position_endstop: -0.5
position_max: 260
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.7 #0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.7 #0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.7 #0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.7 #0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 1
min_temp: 0 #0
max_temp: 120 #120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Raspberry PI
#####################################################################

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

#####################################################################
#   MCU
#####################################################################

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
#   Chamber
#####################################################################

[temperature_sensor Chamber]
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 100
gcode_id: C

#####################################################################
#   Probe
#####################################################################

[probe]
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 5
lift_speed: 30
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 40
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
#####################################################################
#   Fan Control
#####################################################################

[multi_pin ControllerFanPins]
pins: PD12, PD13

##  Controller fan - FAN2
[controller_fan  controller_fan]
pin: multi_pin:ControllerFanPins 
kick_start_time: 0.5
heater: heater_bed

[temperature_fan RPI_Cooling]
pin: PA8 #pwm wire and +- on always on 
sensor_type: temperature_host
target_temp: 50
min_temp: 0
max_temp: 80
control: pid
pid_Kp: 5
pid_Ki: 1
pid_Kd: 50
off_below: 0.3
max_speed: 1.0


#####################################################################
#   LED Control
#####################################################################
[output_pin chamberlights]
pin: PD14
#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################


#[safe_z_home]
#home_xy_position:210,300
#speed:100
#z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
   -60,-10
   360,370
##  Probe points
points:
   50,25
   50,225
   250,225
   250,25
speed: 100
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.005
max_adjust: 10



[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
zero_reference_position: 150,150 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)


#####################################################################
#   SB_LEDS
#####################################################################


[neopixel sb_leds]
pin: EBBCan:gpio16
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#



#autotune


[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
tuning_goal: silent
[autotune_tmc stepper_z1]
motor: omc-17hs19-2004s1
tuning_goal: silent
[autotune_tmc stepper_z2]
motor: omc-17hs19-2004s1
tuning_goal: silent
[autotune_tmc stepper_z3]
motor: omc-17hs19-2004s1
tuning_goal: silent
[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.639
#*# pid_ki = 2.177
#*# pid_kd = 494.756
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 52.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 36.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.007496, 0.007504, 0.002504
#*# 	  -0.002496, 0.000004, 0.000004
#*# 	  -0.004996, 0.000004, -0.007496
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 105.79
#*# max_x = 194.43
#*# min_y = 104.89
#*# max_y = 195.11
#*#
#*# [probe]
#*# z_offset = -1.463
